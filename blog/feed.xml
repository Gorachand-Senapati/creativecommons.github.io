<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">CC technical blog</title>
  <id>urn:uuid:3b553364-cf6e-3235-baa1-779d27c1a90b</id>
  <updated>2019-06-19T00:00:00Z</updated>
  <link href="http://creativecommons.github.io/" />
  <link href="http://creativecommons.github.io/blog/feed.xml" rel="self" />
  <author>
    <name></name>
  </author>
  <generator uri="https://github.com/ajdavis/lektor-atom" version="0.3">Lektor Atom Plugin</generator>
  <entry xml:base="http://creativecommons.github.io/blog/entries/searching-300-million/">
    <title type="text">Searching 300MM Images with CC Search: Backend Architecture</title>
    <id>urn:uuid:0aea69db-370b-3995-82ed-1e94702284c9</id>
    <updated>2019-06-19T00:00:00Z</updated>
    <link href="http://creativecommons.github.io/blog/entries/searching-300-million/" />
    <author>
      <name>aldenpage</name>
    </author>
    <content type="html">&lt;p&gt;In 2016, Creative Commons hired &lt;a href=&quot;https://lizadaly.com/&quot;&gt;Liza Daly&lt;/a&gt; to build &lt;a href=&quot;https://hackernoon.com/cc-search-developer-notes-and-reflection-418271194682&quot;&gt;a proof-of-concept engine&lt;/a&gt; for searching 10 million CC works. Based on the success of that project, Creative Commons chose to pursue funding for scaling up CC Search even further, setting a goal to catalog a larger sample of the estimated 1.4 billion CC-licensed works on the internet. To date, we’ve indexed over 300 million images and served over 15 million search queries in the &lt;a href=&quot;https://search.creativecommons.org&quot;&gt;new version of CC Search&lt;/a&gt;. This post describes some of the technical architecture changes we’ve made to CC Search in order to reach this point.&lt;/p&gt;
&lt;h1 id=&quot;evolution-of-architecture&quot;&gt;Evolution of architecture&lt;/h1&gt;&lt;p&gt;While the prototype successfully demonstrated the usefulness and feasibility of searching openly licensed images, accommodating more images and traffic inevitably required some architectural changes. In addition to supporting a higher quantity of works, we would have significantly increased traffic requirements after exiting the beta phase of the project.
The original prototype was structured as a 3-tier Django app hosted on Amazon Elastic Beanstalk. That’s the best design for a team of one building a minimum viable product. However, the requirements of the project changed: we now have a rapidly growing set of works, more developers, and higher traffic requirements. It would not be possible to meet these requirements without rewriting a lot of code.&lt;/p&gt;
&lt;p&gt;At this point, it’s easy to fall into the trap of overengineering. Rather than start from scratch, we decided to preserve the parts of the project that worked well for our use case, and perform an informed rewrite of the parts that didn’t. To that end, bits and pieces of the original CC Search prototype live on in the current version of CC Search.&lt;/p&gt;
&lt;h2 id=&quot;peopleware&quot;&gt;Peopleware&lt;/h2&gt;&lt;p&gt;First, we divided the work into 3 separate silos - data engineering, backend, and frontend. That means that each respective developer could focus entirely on accumulating CC licensed content, building scalable infrastructure to serve this content to the public, and improving the user experience/presentation layer. The data and frontend layers would be tied together through an &lt;a href=&quot;https://api.creativecommons.engineering&quot;&gt;open API&lt;/a&gt;, which also opens up the possibility of developers building their own custom applications with CC Search, such as a Photoshop plugin or a &lt;a href=&quot;https://github.com/creativecommons/ccsearch-browser-extension/&quot;&gt;Firefox addon&lt;/a&gt;. Each developer could use whatever tools they were most familiar with to implement their slice of the project.&lt;/p&gt;
&lt;h2 id=&quot;updating-the-search-index&quot;&gt;Updating the Search Index&lt;/h2&gt;&lt;p&gt;One of the first problems that needed to be solved was reducing the time that it took to add works to our search engine. It took about 3 days to index 10 million images in the original prototype. Since the prototype search data was static, that was completely acceptable; however, for 300 million works, it would take 90 days to index the data.
Investigation revealed that the problem was the use of Django signals to populate the search index. Every time a work was added to the database, it would be indexed inside of Elasticsearch. This works well for a steady trickle of updates, but does not work so well for 300 million updates.
 Instead of using Django signals to incrementally add individual items to the database and search index, we took a “freight train” approach where we would rebuild the entire database and search index in bulk. The tradeoff is that there would be some lag time between finding CC licensed content and when it actually shows up in production where the end user can see it. Since users can’t really tell if your image index is a few hours out of date, this seemed like a worthwhile price to pay; we can always introduce “fast path” updates later when the situation calls for it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/blog/entries/searching-300-million/ingestion_diagram.jpg&quot; alt=&quot;Ingestion Server&quot;&gt;&lt;/p&gt;
&lt;p&gt;The piece of software responsible for updating our search data is called &lt;a href=&quot;https://github.com/creativecommons/cccatalog-api/tree/master/ingestion_server/ingestion_server&quot;&gt;Ingestion Server&lt;/a&gt;. It copies data from the CC Catalog into the production PostgreSQL database, and then indexes that data inside of Elasticsearch in bulk. The tricky part about this is that we had to reload the data without impacting performance or availability of the production system. So, if the ingestion were to fail for some reason (Elasticsearch or our database runs out of space, malformed data breaks the indexer, etc), the users shouldn’t even notice. To accomplish that, all data is loaded into temporary tables and indices, tested for defects, and then promoted to the “live” search index.&lt;/p&gt;
&lt;h2 id=&quot;searching-300-million-works-in-high-traffic-conditions&quot;&gt;Searching 300 million works in high traffic conditions&lt;/h2&gt;&lt;p&gt;Searching 10 million works is achievable with nothing but a database and a single virtual machine. Searching 300 million images to an unknown (but probably larger) number of users would take some more firepower.
We predicted that we would have a lot more users after removing the “beta” designation and promoting CC Search to the general public, but couldn’t possibly predict exactly how much. To deal with that uncertainty, we designed the system to be horizontally scalable: we can always add more nodes to Elasticsearch to accommodate an increase in content and traffic, and we can also scale up the number of API servers in response to demand. Finally, we can utilize caching to reduce the cost of each search query. With these changes, our infrastructure is able to handle high volumes of visitors without unplanned downtime.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/blog/entries/searching-300-million/system_architecture.png&quot; alt=&quot;System Architecture&quot;&gt;&lt;/p&gt;
&lt;p&gt;Unfortunately, drawing architecture diagrams and allocating autoscaling groups does not prove that your design will work under load. To that end, we wrote up some Locust load tests. With about 50 lines of code, we were able to hammer the API with tens of thousands of requests per second and see what happened. This step was vital, as it allowed us to fix performance bottlenecks before experiencing live traffic. It uncovered a number of difficult to discover performance related configuration problems and deadlock conditions before we ever even hit production.&lt;/p&gt;
&lt;h2 id=&quot;a-hack-for-handling-link-rot-at-scale&quot;&gt;A Hack for Handling Link Rot at Scale&lt;/h2&gt;&lt;p&gt;One significant challenge we faced was link rot: over time, images are moved to new locations or entirely deleted. Once we began indexing more data from social platforms like Flickr and Behance, the problem became too big to ignore; CC Search was returning page after page of dead links. To make matters worse, we don’t host our own thumbnails; we scrape them from the original data source and embed them in our results. As a consequence of this, broken thumbnails would show up in the search results, creating a really bad user experience.&lt;/p&gt;
&lt;p&gt;The logical answer to this would be to scrape the images and produce our own thumbnails, which we intend to do in the near future. That would solve the immediate usability problem of broken thumbnails, but not solve the underlying issue of deleted images being linked in our search results. Additionally, scraping and storing 300 million+ images would incur significant storage costs. We would also need to crawl 300 million images without placing undue burden on our content partners. When 290 million images in the catalog are stored on Flickr alone, this is impossible; we would have to make thousands of calls per second to crawl that amount of content in a reasonable period of time. Your crawler will not survive for very long if all of your target sites block you for sucking up all of their capacity. Finally, how often can we perform such a crawl? Once a month? Once per year? In the meantime, between crawls, more link rot is taking place.&lt;/p&gt;
&lt;p&gt;Instead of building a crawler, we decided to perform some server-side validation. After we obtain the search results, the API server concurrently performs a HEAD request on every single image in the result set to check that it’s still valid. If it’s invalid, we delete it from the search results. We cache the image’s status code in Redis with a TTL to ensure that we aren’t making loads of pointless HTTP requests and reduce the risk of being throttled by 3rd parties.&lt;/p&gt;
&lt;p&gt;In general, this “just-in-time validation” has worked surprisingly well. Broken thumbnails are a rare occurrence now. It solved a lot of the issues related to embedding 3rd party content in our search results, buying us more time to build a more sustainable database-layer solution to link rot and thumbnailing.&lt;/p&gt;
&lt;h2 id=&quot;managing-infrastructure-with-terraform&quot;&gt;Managing Infrastructure with Terraform&lt;/h2&gt;&lt;p&gt;With greater scale comes greater complexity. Since there would be more moving parts in our implementation of CC Search, we would need some kind of infrastructure as code tool to manage zero-downtime deployments, provisioning new virtual machines, configuration management, tracking expenses, and documenting what is actually in production. We considered Kubernetes, but that seemed like massive overkill for a team of our size and a source of too much operational complexity. Instead, we use &lt;a href=&quot;https://www.terraform.io/&quot;&gt;Terraform&lt;/a&gt; to declaratively provision our software to EC2 instances hosted on AWS. Everything is containerized, so we can easily transition to Kubernetes or Nomad if we desire in the future, but Terraform has proven to be more than sufficient so far.&lt;/p&gt;
&lt;p&gt;With Terraform, we are able to produce deployment plans, see what changes are going to appear in production, and only then pull the trigger. It also provides &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/what-is-immutable-infrastructure&quot;&gt;immutable infrastructure&lt;/a&gt;:  instead of sshing into servers and fiddling with settings or running bespoke deployment scripts, whenever we want to make a change, we completely re-provision the virtual machine with new settings. The current state of the system is always documented in our Terraform code.&lt;/p&gt;
&lt;h2 id=&quot;the-future&quot;&gt;The Future&lt;/h2&gt;&lt;p&gt;The next step for CC Search is improving the relevance of our search results, which is going to entail performing large scale scraping of some of the catalog, performing AI analysis of the scraped content, and implementing some popularity-based algorithm to boost the most interesting results to the top. We’re also going to start producing thumbnails for at least some subset of our catalog, perhaps on a just-in-time basis or through multiple caching image proxies.&lt;/p&gt;
</content>
  </entry>
  <entry xml:base="http://creativecommons.github.io/blog/entries/cc-datacatalog-visualization/">
    <title type="text">Visualize CC Catalog data</title>
    <id>urn:uuid:bc2e5551-25e5-3bba-8183-83f3b905bef4</id>
    <updated>2019-06-17T00:00:00Z</updated>
    <link href="http://creativecommons.github.io/blog/entries/cc-datacatalog-visualization/" />
    <author>
      <name>soccerdroid</name>
    </author>
    <content type="html">&lt;p&gt;&lt;em&gt;“By visualizing information, we turn it into a landscape that you can explore with your eyes.”&lt;/em&gt; – David McCandless.&lt;/p&gt;
&lt;p&gt;The landscape of licensed content is wide and varied. We have domains linking to other domains, different license types, and some metadata. This information is extracted from the Internet monthly by &lt;a href=&quot;http://commoncrawl.org/&quot;&gt;Common Crawl&lt;/a&gt;. It is fair to mention that we have 250 million works and growing! If you didn't know we had so much licensed content, well then, this is one of the goals of this project: show the users how licensers are connected, their licensed content, and show how the licensing wave is expanding.&lt;/p&gt;
&lt;h3 id=&quot;hands-to-work&quot;&gt;Hands to work!&lt;/h3&gt;&lt;p&gt;Currently, there are tons of graphs and visualization concepts that have proven to work better with certain data. In addition, because of the huge amount of data we possess, a critical point to keep in mind is that the graph must keep being meaningful (for example, with the classic node-link approach, you can end up having a confusing hairball). Hence, the visualization must be scalable. Finding which visualization would  work the best with the CC catalog dataset was my first task. I reviewed the state-of-art in graphs visualization, but in this post I'm not going to go deep with it. The highlights and conclusions of this review are the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Two case studies were reviewed, named &lt;a href=&quot;https://onlinelibrary.wiley.com/doi/abs/10.1111/cgf.12395&quot;&gt;Papilio&lt;/a&gt; and &lt;a href=&quot;https://ieeexplore.ieee.org/document/5613445&quot;&gt;GeneaQuilts&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;In both cases, data needs to be hierarchical (or have an attribute to use so to order or group the data) .&lt;/li&gt;
&lt;li&gt;Benefits are focused on the analysis tasks that are specific to those use cases (and yes, they are not the same for our case).&lt;/li&gt;
&lt;li&gt;Visualizations are not meaningful when you have thousands of nodes.&lt;/li&gt;
&lt;li&gt;Both cases needed to build a library from scratch.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Conclusion:&lt;/strong&gt; neither of the solutions reviewed seemed viable for the CC-Catalog visualization project, as they do not show huge improvements in scalability. In addition, they do not fit for our case study.&lt;/p&gt;
&lt;h3 id=&quot;the-graph&quot;&gt;The graph&lt;/h3&gt;&lt;p&gt;Now that I knew what to draw, the next step was to find HOW to draw the graph. There is a wide range of visualization libraries where to choose from, you might feel overwhelmed at first. &lt;strong&gt;Tip:&lt;/strong&gt; define priorities/ key aspects according to what you want to visualize. Performance with big data, community support and a smooth learning curve were the aspects I checked for making a decision. We finally chose to work with &lt;a href=&quot;https://github.com/vasturiano/force-graph&quot;&gt;force-d3&lt;/a&gt;, an open-source library that uses the d3-force module as the underlying physics engine.  It has a friendly and simple API, as well as documentation and examples.&lt;/p&gt;
&lt;p&gt;One challenging task was to draw the nodes. The idea here is to show the domains names inside the nodes, and let the nodes size to be data driven. Funny fact: I spent hours before finding out that I received nodes as canvas objects with the API. Once you know how to draw nodes, the styling of the edges is a ride, because in force-d3 they are handled in the same way as the nodes objects. The edges are highlighted and their width increases when the user hovers over them. Another not-so-easy feature I implemented was to highlight a node and its neighbors. Here I have to thank to &lt;a href=&quot;https://github.com/vasturiano&quot;&gt;Mr. Vasturiano&lt;/a&gt;, the author of the library, who directed me to an example he developed with a very similar functionality. He is continuously checking and fixing open issues in his repo. Great library! I recommend you to check it out.&lt;/p&gt;
&lt;h3 id=&quot;licensed-content-by-types-of-cc-licenses&quot;&gt;Licensed content by types of CC licenses&lt;/h3&gt;&lt;p&gt;Creative Commons has &lt;a href=&quot;https://creativecommons.org/licenses/&quot;&gt;6 license types&lt;/a&gt;. We know which licenses each domain uses for their content, so it would be great if we can show to the public, for example, the most popular license. The idea is then, to display in a simple graph like a pie chart, the licensed content of each domain, classified by their type. The pie chart will be placed inside a modal. The modal will be triggered and showed after the user clicks on a node in the graph. For this visualization, we are using &lt;a href=&quot;https://www.highcharts.com/&quot;&gt;Highcharts&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The final look of the front-end is:&lt;/p&gt;
&lt;p&gt;&lt;div&gt;
&lt;img src=&quot;cc_graph.png&quot; alt=&quot;CC Data Catalog Visualization&quot;/&gt;&lt;br/&gt;
&lt;small class=&quot;muted&quot;&gt;Current sample graph, developed with force-d3. &lt;/small&gt;
&lt;/div&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;div&gt;
&lt;img src=&quot;cc_graph_zoom.png&quot; alt=&quot;CC Data Catalog Visualization&quot; /&gt;&lt;br/&gt;
&lt;small class=&quot;muted&quot;&gt;Nodes with sample domain names. When the user hovers over a node, its neighbors are highlighted. The nodes sizes are data-driven.&lt;/small&gt;
&lt;/div&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;div&gt;
&lt;img src=&quot;cc_piechart.png&quot; alt=&quot;Pie chart license types&quot; /&gt;&lt;br/&gt;
&lt;small class=&quot;muted&quot; style=&quot;text-align:center;&quot;&gt;Pie chart that shows the proportions of licensed content of a domain, classified by CC license types.&lt;/small&gt;
&lt;/div&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PD:&lt;/strong&gt; if the nodes labels are familiar to you, yes, they are the names of the characters of Les Misérables. I'm working with sample data!&lt;/p&gt;
&lt;h3 id=&quot;coming-soon&quot;&gt;Coming soon&lt;/h3&gt;&lt;p&gt;As the front-end is complete, I am going to get my hands dirty with the data. Future milestones for the next two weeks include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Files conversion in Spark&lt;/li&gt;
&lt;li&gt;Reviewing of part of the dataset&lt;/li&gt;
&lt;li&gt;Implementation of a module for cleaning and parsing the data&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can follow the project development in the &lt;a href=&quot;https://github.com/creativecommons/cccatalog-dataviz&quot;&gt;Github repo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;CC Data Catalog Visualization is my GSoC 2019 project under the guidance of &lt;a href=&quot;https://creativecommons.org/author/sclachar/&quot;&gt;Sophine
Clachar&lt;/a&gt;, who has been greatly helpful and considerate since the GSoC application period. Also, my backup mentor, &lt;a href=&quot;https://creativecommons.org/author/brenoferreira/&quot;&gt;Breno Ferreira&lt;/a&gt;, and engineering director &lt;a href=&quot;https://creativecommons.org/author/kriticreativecommons-org/&quot;&gt;Kriti
Godey&lt;/a&gt;, have been very supportive.&lt;/p&gt;
&lt;p&gt;Have a nice week!&lt;/p&gt;
&lt;p&gt;Maria&lt;/p&gt;
</content>
  </entry>
  <entry xml:base="http://creativecommons.github.io/blog/entries/cc-vocabulary-new-design-system/">
    <title type="text">CC Vocabulary is a new design system for Creative Commons</title>
    <id>urn:uuid:965695b7-ade4-322e-8936-55d5dd0d1180</id>
    <updated>2019-06-15T00:00:00Z</updated>
    <link href="http://creativecommons.github.io/blog/entries/cc-vocabulary-new-design-system/" />
    <author>
      <name>dhruvkb</name>
    </author>
    <content type="html">&lt;p&gt;With the development period of GSoC 2019 well under way, a number of new and
improved Creative Commons apps are navigating their way to production and
worldwide reception. With all this development comes one obvious challenge:
&lt;em&gt;consistency&lt;/em&gt; (not to mention a number of other challenges such as 
internationalisation and modularity).&lt;/p&gt;
&lt;p&gt;The idea of a design system, to have a collection of elements and components
designed cohesively to be used across the body of applications of a particular
brand, is not new or even remotely my original. In fact, every organisation with
more than one application should have a design system. My last project was
backed by its own component library and it saved my team countless hours of
bikeshedding and repetitive design iterations.&lt;/p&gt;
&lt;p&gt;Contributing to CC Search in the period before GSoC made me realize the numerous
areas of the project that would benefit from a pre-built library and prompted
the proposal that eventually became my project. I'll cite the same example that 
I used in my proposal because it so clearly shows a problem and its solution.&lt;/p&gt;
&lt;p&gt;Consider for example the header and footer. All CC apps have a header and a
footer developed along the lines of &lt;a href=&quot;https://creativecommons.org/&quot;&gt;the
homepage&lt;/a&gt;, albeit to varying extents. However, due
to the lack of a common component, every app develops its own and they end up
looking like these. Calling them inconsistent would be an understatement.&lt;/p&gt;
&lt;div&gt;
&lt;img src=&quot;cc_home.png&quot; alt=&quot;CC Homepage&quot;/&gt;&lt;br/&gt;
&lt;small class=&quot;muted&quot;&gt;The footer on the CC homepage&lt;/small&gt;
&lt;/div&gt;&lt;div&gt;
&lt;img alt=&quot;CC Search&quot; src=&quot;cc_search.png&quot;/&gt;&lt;br/&gt;
&lt;small class=&quot;muted&quot;&gt;The footer in the CC Search app&lt;/small&gt;
&lt;/div&gt;&lt;div&gt;
&lt;img alt&quot;CC GitHub&quot; src=&quot;cc_github.png&quot;/&gt;&lt;br&gt;
&lt;small class=&quot;muted&quot;&gt;The footer on the CC Open Source site&lt;/small&gt;
&lt;/div&gt;&lt;h3 id=&quot;enter-cc-vocabulary&quot;&gt;Enter CC Vocabulary&lt;/h3&gt;&lt;p&gt;CC Vocabulary solves precisely that. It is a set of components, elements and
patterns that unite Creative Commons' applications in terms of look and feel,
while encapsulating and abstracting basic functionality that need not be
reinvented per-app.&lt;/p&gt;
&lt;p&gt;Now CC Vocabulary provides a footer (ready to use today!) that can be used on
all three of the above sites, conveying the same information in the same
consistent layout.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&quot;What about the different contents in the footers?&quot;&lt;/em&gt;, you ask.&lt;/p&gt;
&lt;p&gt;As for the different content in all three footers, the third column is 100%
customisable. So whether crediting the developers of the website, attributing
the icon artists or licensing the content therein, the footer just works. And
when it comes to translations, Vocabulary has you covered. Lastly, to embody the
colorful world of creativity, every CC Vocabulary component can be colored. So
from the blue header of CC Search to the orange one on the homepage, there's a
component for everybody.&lt;/p&gt;
&lt;p&gt;'Nuff said.&lt;/p&gt;
&lt;div&gt;
&lt;img alt=&quot;CC Vocabulary&quot; src=&quot;cc_vocabulary.png&quot;/&gt;&lt;br/&gt;
&lt;small class=&quot;muted&quot;&gt;The footer provided by CC Vocabulary&lt;/small&gt;
&lt;/div&gt;&lt;div&gt;
&lt;img alt=&quot;CC Vocabulary GitHub&quot; src=&quot;cc_vocabulary_github.png&quot;/&gt;&lt;br/&gt;
&lt;small class=&quot;muted&quot;&gt;The footer provided by CC Vocabulary customised for the CC
Open Source site&lt;/small&gt;
&lt;/div&gt;&lt;div&gt;
&lt;img alt=&quot;CC Vocabulary Hindi&quot; src=&quot;cc_vocabulary_hindi.png&quot;/&gt;&lt;br/&gt;
&lt;small class=&quot;muted&quot;&gt;The footer provided by CC Vocabulary in Hindi&lt;/small&gt;
&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;Let's get to the nerdy stuff, the &lt;strong&gt;development details&lt;/strong&gt;. Here's the good, the
bad and the ugly of Vue development and also how all three adjectives fail to
embody the one constant feeling: &lt;em&gt;challenging&lt;/em&gt;!&lt;/p&gt;
&lt;h3 id=&quot;the-good&quot;&gt;The good&lt;/h3&gt;&lt;p&gt;As you've already seen, the prospects of the library in making the CC codebase
modular, cleaner and i18n-ready are huge. And being written in Vue has a ton of
perks, not the least of which is a future-ready, progressive framework to back
the project!&lt;/p&gt;
&lt;p&gt;Working in JavaScript is very different from a Python project. For instance, I
had literally very little need for Docker containers in the first place as npm
modules are local unlike pip, which needs Pipenv or similar to add sanity to
package management.&lt;/p&gt;
&lt;p&gt;Development in Vue is even more different, and even even more so when building a
Webpack-based app with Vue CLI, which takes a different approach compared to
React CRA. For one, there is no option to eject! So any changes to the Webpack
config have to be submitted via an object in &lt;code&gt;vue.config.js&lt;/code&gt; and deep merged
with the existing config.&lt;/p&gt;
&lt;p&gt;Then there are plugins. Plugins for Vue CLI are few and far in between but those
that are work extremely well and integrate with the Vue UI, a web based
management tool for Vue projects. Both Vue Styleguidist, the plugin used to
generate the styleguide and Vue i18n, the plugin used to provide translations
work seamlessly with Vue and, with the exception of having to manually enable
i18n in Styleguidist by extending the renderer in &lt;code&gt;styleguide.config.js&lt;/code&gt; (more
on that later), with each other.&lt;/p&gt;
&lt;p&gt;Coming from a React background, the helpfulness of the Vue framework contrasts
starkly with the cold stony world I was accustomed to. &lt;em&gt;&quot;I'm beginning to enjoy
JavaScript&quot;&lt;/em&gt;, a sentence I never thought I'd say.&lt;/p&gt;
&lt;p&gt;So by the end of week one, I had a styleguide with a Heading component and a
Docker setup to boot. I also had a ridiculously large smile from all the
learning that I did. By the end of three weeks, I was the proud developer of a
world-class web component framework that was beginning to have some real
footing, something I had not even dreamed possible!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pro-tip:&lt;/strong&gt; If you haven't seen or experienced Vue UI, you should. It will 
change your opinion of Vue for the better, as it did mine.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;[user cc-vocabulary]$ vue ui
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;the-bad&quot;&gt;The bad&lt;/h3&gt;&lt;p&gt;In week 2, I had to develop a number of components and incorporate design
tokens, a practice with origins at Salesforce. Folks wiser than myself at
Salesforce came up with the idea of using design tokens to keep constants out of
the design and frontend development process, abstracting the actual nitty gritty
of colors and border radii behind semantic names such as &lt;code&gt;blue_light&lt;/code&gt; and
&lt;code&gt;radius_small&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Hardcoding every single color and every single dimension in YAML files manually
from little to no reference at all was a very low point in an already low week.
The reason behing this pain is &lt;a href=&quot;https://wiki.creativecommons.org/wiki/colors&quot;&gt;CC's color
palette&lt;/a&gt; which provides all values
in hex &lt;code&gt;#abcdef&lt;/code&gt; for the close to forty colors in the palette. Were they HSL
values, it would have been extremely easy to shade the colors. If any brand aims
to redo its colors, I would suggest using HSL wherein HS is used to determine a
color and L is varied to determine its shades.&lt;/p&gt;
&lt;p&gt;Another strange decision taken by Vue is that Vue components use a Single File
Component scheme making use of &lt;code&gt;.vue&lt;/code&gt; files that Webpack processes using the
&lt;code&gt;vue-loader&lt;/code&gt; package. Now Styleguidist and Vue i18n both add their own tags to
the mix such as &lt;code&gt;&amp;lt;docs&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;i18n&amp;gt;&lt;/code&gt; making one component file go to hundreds
or even thousands of lines! In a world that taught us to decouple style from
functionality, this mushing of languages did not sit too well with me and I kept
contemplating what reasons would have prompted the developers to take this step.&lt;/p&gt;
&lt;p&gt;Also Styleguidist comes with a very bland default style so to make it barely
presentable, one needs to override a lot of CSS styles that have absurdly high
specificities. Thankfully the default design is bland, not ugly otherwise the
whole thing would have been an ugly, miserable affair.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pro-tip:&lt;/strong&gt; This catastrophe could have become ugly were it not for the
benevolent &lt;code&gt;src&lt;/code&gt; attribute supported by some Vue tags. I had known this for
merely seconds when I found myself breaking my components down using&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-html&quot;&gt;&amp;lt;style scoped lang=&amp;quot;stylus&amp;quot; src=&amp;quot;./Component.styl&amp;quot;&amp;gt;&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to store CSS separately and&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-html&quot;&gt;&amp;lt;i18n src=&amp;quot;./Component.json&amp;quot;&amp;gt;&amp;lt;/i18n&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to keep translations outside of my code, thus making the file much more
manageable. There is still no way to split the JS &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; from the HTML
&lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; without losing all autocompletion features provided by the IDE.&lt;/p&gt;
&lt;h3 id=&quot;the-ugly&quot;&gt;The ugly&lt;/h3&gt;&lt;p&gt;Incorporating translations into the project was the weirdest. With two or three
commands maximum, the Vue website had translations enabled and was working
perfectly. But the Styleguide would &lt;em&gt;just not render translations at all!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;It took close to three days to even figure out why. Once I misinterpreted the
cause of the error, broke the entire styleguide and had to&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;[user cc-vocabulary]$ git reset --hard HEAD
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to even get things to work. &lt;em&gt;&quot;Use VCS.&quot;&lt;/em&gt;, proved one again.&lt;/p&gt;
&lt;p&gt;Finally I had to register the i18n plugin separately for the styleguide, install
the middleware on all components and add a locale selector to every preview box
across the styleguide by extending and overriding the preview component. The
good folks at Styleguidist had provided for that functionality, and it revealed
itself to me as I was at the very brink of losing my mind.&lt;/p&gt;
&lt;p&gt;To add insult to injury, translations have to be done by hand. I know this is
how the world of i18n works but it would be really magical if we had a service
to do the translations automatically. Now I can write in two languages, and will
translate components to the other one as best as I can. But I urge you to
&lt;a href=&quot;https://github.com/creativecommons/cc-vocabulary&quot;&gt;contribute&lt;/a&gt; too. Together we
can make CC components globally local.&lt;/p&gt;
&lt;p&gt;Languages that follow an alternate orientation, such as top-to-bottom or
right-to-left would pose significant difficulty to implement, having to manually
render everything in an opposite or perpendicular direction gives me the chills.
It's gonna be ugly.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pro-tip:&lt;/strong&gt; I learned that flags are a terrible way to represent language. Many
languages are spoken more widely outside countries of origin (think English) and
many countries are home to several languages (think India). Many large websites
make the mistake of using flag alongside language names and that seems so stupid
in retrospect.&lt;/p&gt;
&lt;p&gt;Also one should use the native name of the language in the selector (like हिन्दी)
and the universal translation icon (or some stylistic variant thereof).&lt;/p&gt;
&lt;center&gt;
&lt;img alt=&quot;Translate icon&quot; src=&quot;translate.png&quot; height=&quot;48px&quot;/&gt;
&lt;/center&gt;&lt;hr&gt;
&lt;h3 id=&quot;tl;dr&quot;&gt;TL;DR&lt;/h3&gt;&lt;p&gt;The project which takes out a lot of the hard work from frontend
development has its fair share of hard work cut out for itself. The challenges
ahead are plentiful, but the solutions they inspire are diamonds in their own
right. It is safe to say that I can attribute my complete understanding of Vue, i18n,
component libraries, styleguides and design systems to CC Vocabulary.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Before we move on, let me tell you the bad and the ugly are not the norm. The 
good was the major portion of the project.&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;future&quot;&gt;Future&lt;/h3&gt;&lt;p&gt;So as you can see CC Vocabulary represents a huge leap forward for the
web-facing Creative Commons. I can't wait to see the new generation of apps by
Creative Commons, &lt;em&gt;powered by CC Vocabulary&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;CC Vocabulary is out now, with its code, design and translations on GitHub and a
live styleguide hosted on GitHub pages. Please &lt;a href=&quot;https://creativecommons.github.io/cc-vocabulary/&quot;&gt;check it
out&lt;/a&gt; and join the discussions.
Since it is too early to even call it a beta, your feedback is crucial in shaping
its future and with it, the future of all Creative Commons apps.&lt;/p&gt;
&lt;p&gt;Here's a sneak peek!&lt;/p&gt;
&lt;div&gt;
&lt;img alt=&quot;CC Vocabulary in production&quot; src=&quot;hello.png&quot;/&gt;&lt;br/&gt;
&lt;small class=&quot;muted&quot;&gt;Say hello to CC Vocabulary!&lt;/small&gt;
&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;CC Vocabulary is my GSoC 2019 project under the guidance of &lt;a href=&quot;https://creativecommons.org/author/hugocreativecommons-org/&quot;&gt;Hugo
Solar&lt;/a&gt; and &lt;a href=&quot;https://creativecommons.org/author/sclachar/&quot;&gt;Sophine
Clachar&lt;/a&gt;. Although not officially
a mentor &lt;a href=&quot;https://creativecommons.org/author/kriticreativecommons-org/&quot;&gt;Kriti
Godey&lt;/a&gt; has also
been really supportive and helpful.&lt;/p&gt;
&lt;h3 id=&quot;work-log&quot;&gt;Work log&lt;/h3&gt;&lt;p&gt;See GitHub &lt;a href=&quot;https://github.com/creativecommons/cc-vocabulary/commits&quot;&gt;commits&lt;/a&gt;
for in-depth logs.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Set up the Vue CLI 3 project&lt;/li&gt;
&lt;li&gt;Installed and customised Styleguidist&lt;/li&gt;
&lt;li&gt;Dockerised the setup for ease of setup and development&lt;/li&gt;
&lt;li&gt;Developed a home page for the project&lt;/li&gt;
&lt;li&gt;Developed simple components, called elements, like Heading and Paragraph&lt;/li&gt;
&lt;li&gt;Added design tokens and Theo workflow&lt;/li&gt;
&lt;li&gt;Converted all constants to design tokens: color, fonts and dimensions&lt;/li&gt;
&lt;li&gt;Wrote some, not all and definitely not enough, tests&lt;/li&gt;
&lt;li&gt;Added elements like Container and Badge&lt;/li&gt;
&lt;li&gt;Added complex components, called patterns, like Hello, Header and Footer&lt;/li&gt;
&lt;li&gt;Deployed styleguide to GitHub Pages&lt;/li&gt;
&lt;li&gt;Added color to patterns in a reusable way&lt;/li&gt;
&lt;li&gt;Added i18n capabilities and initiated translation to Hindi in the Footer&lt;/li&gt;
&lt;li&gt;Developed the Locale switcher and integrated with Styleguidist&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;coming-up&quot;&gt;Coming up&lt;/h3&gt;&lt;p&gt;See proposal for in-depth goals.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Integrate the library, gradually, with CC Search&lt;/li&gt;
&lt;li&gt;Add more generic components&lt;/li&gt;
&lt;li&gt;Go to point 1&lt;/li&gt;
&lt;li&gt;Develop a non-Vue vanilla CSS + JS based version of the library&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry xml:base="http://creativecommons.github.io/blog/entries/cc-chooser-week2/">
    <title type="text">GSoC cc-chooser Week 2</title>
    <id>urn:uuid:c7a72678-ddcf-3e4a-a341-87a52fa48a7f</id>
    <updated>2019-06-14T00:00:00Z</updated>
    <link href="http://creativecommons.github.io/blog/entries/cc-chooser-week2/" />
    <author>
      <name>akmadian</name>
    </author>
    <content type="html">&lt;p&gt;In case you don't know, my GSoC project involves revamping &lt;a href=&quot;https://creativecommons.org/choose/&quot;&gt;the CC license chooser&lt;/a&gt;.
 I am working with my mentor, &lt;a href=&quot;https://creativecommons.org/author/brenoferreira/&quot;&gt;Breno Ferreira&lt;/a&gt;, to visually overhaul the tool, as well as making it more educational, and more usable.&lt;/p&gt;
&lt;p&gt;This week, I worked on the site layout and usability testing of the existing chooser.&lt;/p&gt;
&lt;p&gt;I enjoyed usability testing more than I expected. During my mid-week standup meeting with Breno, he had some suggestions about the layout that came up in usability testing I was conducting literally the same day.
 I thought this was kinda funny, it was like my tester and Breno had talked about the layout between the meeting and testing. 
 I really enjoyed working on the layout. Experimenting with different layouts and visual styles, seeing the changes and the progression
 from iteration to iteration was a really fun process, and I really enjoyed seeing the new site take shape right before my eyes.&lt;/p&gt;
&lt;p&gt;This week's time managment was somewhat difficult for me. It's the second to last week of my current college quarter, so I'm working hard to prep for finals,
 and that takes lots of time (something I've never considered to be too scarce before I started college, but it's now a precious commodity!).
 With lots of tea and careful time management, I made it through on schedule.&lt;/p&gt;
&lt;p&gt;Next week is all about planning code structure and taking steps with dialing the look and feel of the site, and I'm excited to get started.&lt;/p&gt;
</content>
  </entry>
  <entry xml:base="http://creativecommons.github.io/blog/entries/cc-catalog-leverage-open-data-1/">
    <title type="text">CC Catalog: Leveraging Open Data and Open APIs</title>
    <id>urn:uuid:e24cc83b-b6fb-312b-b379-5aa16af58a16</id>
    <updated>2019-06-07T00:00:00Z</updated>
    <link href="http://creativecommons.github.io/blog/entries/cc-catalog-leverage-open-data-1/" />
    <author>
      <name>sclachar</name>
    </author>
    <content type="html">&lt;p&gt;This post is the first of a three-part series about the underlying infrastructure for Creative Commons (CC) Catalog and the efforts to increase the volume and variety of creative works.&lt;/p&gt;
&lt;p&gt;The purpose of &lt;a href=&quot;https://github.com/creativecommons/cccatalog&quot;&gt;CC Catalog&lt;/a&gt; is to facilitate the discovery of openly licensed content, that proliferates the web. However, this is a challenging task and it requires a combination of techniques. The initial efforts to catalog the Commons began in 2016. The goal was to identify approximately &lt;a href=&quot;https://hackernoon.com/cc-search-developer-notes-and-reflection-418271194682&quot;&gt;1% of the estimated 1.4 billion works&lt;/a&gt; by harnessing open repositories and open APIs to build a &lt;a href=&quot;https://creativecommons.org/2017/02/07/new-cc-search/&quot;&gt;front door to the Commons&lt;/a&gt;. Since then, there has been an emphasis on including more content and discovering new platforms. While CC Catalog still leverages open data to achieve the above, we needed to develop the appropriate infrastructure to also routinely update the existing data.&lt;/p&gt;
&lt;p&gt;The development of this infrastructure began in 2018 with the first &lt;a href=&quot;http://commoncrawl.org/&quot;&gt;Common Crawl&lt;/a&gt; &lt;a href=&quot;https://en.wikipedia.org/wiki/Pipeline_(computing)&quot;&gt;data pipeline&lt;/a&gt;. &lt;a href=&quot;https://spark.apache.org/&quot;&gt;Apache Spark&lt;/a&gt; was used to streamline the processing of petabytes of web crawl data to identify all domains that link to a Creative Commons license. The first test of this strategy was successful and it was instrumental in increasing the number of images and added 13 new platforms for the &lt;a href=&quot;https://creativecommons.org/2018/09/24/big-changes-for-cc-search-beta-updates-released-today/&quot;&gt;updates to CC Search beta&lt;/a&gt;. It also provided incremental updates to the catalog on a monthly basis. Even though Common Crawl corpus is an invaluable source, it requires us to develop a custom parser for each platform that we integrate. This has its merits, but presents a few challenges.&lt;/p&gt;
&lt;p&gt;After this, &lt;a href=&quot;https://en.wikipedia.org/wiki/Open_API&quot;&gt;open APIs&lt;/a&gt; were explored and its purpose was not to replace the Common Crawl methodology but to augment it and hopefully increase the volume of data. This approach began with two platforms: 1) Flickr, since it has &lt;a href=&quot;https://blog.flickr.net/en/2019/03/08/update-on-creative-commons-licenses-and-in-memoriam-accounts/&quot;&gt;millions of CC license content&lt;/a&gt; and 2) Thingiverse. At the end of 2018, the exploratory efforts paid off and the catalog grew from 10 million images to over 260 million and the Flickr API was instrumental in achieving this. In early 2019, three new API providers were included: 1) Met Museum, 2) Cleveland Museum, and 3) Brooklyn Museum. This led to the development of our API &lt;a href=&quot;https://en.wikipedia.org/wiki/Extract,_transform,_load&quot;&gt;ETL data pipeline&lt;/a&gt; that is managed by &lt;a href=&quot;https://airflow.apache.org/&quot;&gt;Apache Airflow&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Currently, we have over 305 million images from 25 providers, and we are still working to improve the data infrastructure and solidify our efforts for &lt;a href=&quot;https://creativecommons.org/2017/02/07/new-cc-search/&quot;&gt;building a vibrant, usable Commons&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/blog/entries/cc-catalog-leverage-open-data-1/cc-catalog-growth.jpg&quot; alt=&quot;cc-catalog-img&quot;&gt;&lt;/p&gt;
&lt;p&gt;The above data is made available to &lt;a href=&quot;https://search.creativecommons.org/&quot;&gt;CC Search&lt;/a&gt; via &lt;a href=&quot;https://github.com/creativecommons/cccatalog-api&quot;&gt;CC Catalog API&lt;/a&gt;. However, all providers in the catalog are not immediately available in CC Search. Various preprocessing efforts are performed in the back-end by the CC Catalog API to determine which content is deemed ready for publishing. Also, platforms are subject to additional reviews and may be suppressed until that process has completed. Currently, CC Search has 19 of the above providers comprising over &lt;a href=&quot;https://creativecommons.github.io/blog/entries/cc-search-out-of-beta/&quot;&gt;300 million images&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The goal for 2019 is to increase the catalog to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;325 million images&lt;/li&gt;
&lt;li&gt;30 providers&lt;/li&gt;
&lt;li&gt;add new content types&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The next post will discuss the details of the Common Crawl data pipeline and how instrumental this corpus is for identifying potential providers and understanding how people are using the various CC license.&lt;/p&gt;
</content>
  </entry>
  <entry xml:base="http://creativecommons.github.io/blog/entries/meet-gsoc-2019-students/">
    <title type="text">Meet CC’s 2019 Google Summer of Code students</title>
    <id>urn:uuid:dba4248f-6d54-3bc7-a553-fae71da290e1</id>
    <updated>2019-05-30T00:00:00Z</updated>
    <link href="http://creativecommons.github.io/blog/entries/meet-gsoc-2019-students/" />
    <author>
      <name>kgodey</name>
    </author>
    <content type="html">&lt;p&gt;This year, &lt;a href=&quot;https://creativecommons.org/2019/03/04/cc-google-summer-of-code-2019/&quot;&gt;CC is participating in Google Summer of Code (GSoC)&lt;/a&gt;
 as a mentoring organization after a six year break from the program. We
 are excited to be hosting five phenomenal students (representing three 
continents) who will be working on CC tech projects full-time over the 
summer. Here they are!&lt;/p&gt;
&lt;div class=&quot;students&quot;&gt;
  &lt;div class=&quot;row&quot;&gt;
    &lt;div class=&quot;col&quot;&gt;
      &lt;p&gt;&lt;strong&gt;Ahmad Bilal&lt;/strong&gt;&lt;/p&gt;

      &lt;p&gt;&lt;em&gt;I am Ahmad Bilal, a Computer Science undergrad from UET Lahore, 
      who likes computers, problems and using the former to solve the later. I
      am always excited about Open Source, and currently focused on Node.js, 
      Serverless, GraphQL, Cloud, Gatsby.js with React.js and WordPress. I 
      like organizing meetups, conferences and meeting new people. I view 
      working in GSoC with Creative Commons, one of the biggest opportunities 
      of my life. Cats are my weakness, and I am a sucker for well-engineered 
      cars.&lt;/em&gt;&lt;/p&gt;

      &lt;p&gt;&lt;a href=&quot;https://github.com/creativecommons/creativecommons-wordpress-plugin&quot;&gt;Ahmad will be taking ownership of [the CC WordPress plugin&lt;/a&gt;,
      which simplifies the process of applying CC licenses to content created
      using the popular WordPress blogging platform. He will be updating it 
      to use the latest WordPress best practices, resolving open issues, and 
      adding new features like integrating with CC Search. Ahmad’s mentor is 
      our Core Systems Manager &lt;a href=&quot;https://creativecommons.org/author/timidcreativecommons-org/&quot;&gt;Timid Robot Zehta&lt;/a&gt;, backed up by Hugo Solar.&lt;/p&gt;

      &lt;p&gt;You can follow the progress of this project through the &lt;a href=&quot;https://github.com/creativecommons/creativecommons-wordpress-plugin&quot;&gt;GitHub repo&lt;/a&gt; or on the &lt;code&gt;#cc-dev-wordpress&lt;/code&gt; channel on our &lt;a href=&quot;https://creativecommons.github.io/community&quot;&gt;Slack community&lt;/a&gt;.&lt;/p&gt;
    &lt;/div&gt;
    &lt;div class=&quot;col pt-3&quot;&gt;
      &lt;img src=&quot;ahmad.jpg&quot; alt=&quot;ahmad bilal&quot; /&gt;&lt;br /&gt;
      &lt;small class=&quot;muted&quot;&gt;Ahmad Bilal, credit: Usman C., CC BY-NC-ND 2.0&lt;/small&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;row&quot;&gt;
    &lt;div class=&quot;col&quot;&gt;
      &lt;p&gt;&lt;strong&gt;Dhruv Bhanushali&lt;/strong&gt;&lt;/p&gt;

      &lt;p&gt;&lt;em&gt;I am Dhruv Bhanushali, a Mumbai-based software developer recently
       graduated from IIT Roorkee. I started programming as a hobby some five 
      years ago and, having found my calling, am now am pursuing a career in 
      the field. I have worked on a lot of institute-level projects and am 
      excited to expand the reach of my code to a global scale with CC through
       GSoC. Apart from development, I am a huge music fan and keep my curated
       collection of music with me at all times. I also love to binge watch TV
       shows and movies, especially indie art films.&lt;/em&gt;&lt;/p&gt;

      &lt;p&gt;Dhruv will be working on an original project, CC Vocabulary, which is
       a collection of UI components that make it easy to develop Creative 
      Commons apps and services while ensuring a cohesive experience and 
      appearance across CC projects. These components will be able to be used 
      in sites built using modern JavaScript frameworks (specifically Vue.js) 
      as well as simpler websites built using WordPress. CC’s Web Developer &lt;a href=&quot;https://creativecommons.org/author/hugocreativecommons-org/&quot;&gt;Hugo Solar&lt;/a&gt; serves as primary mentor, with backup from Sophine Clachar.&lt;/p&gt;

      &lt;p&gt;You can follow the progress of this project through the &lt;a href=&quot;https://github.com/creativecommons/cc-vocabulary&quot;&gt;GitHub repo&lt;/a&gt; or on the &lt;code&gt;#gsoc-cc-vocabulary&lt;/code&gt; channel on our &lt;a href=&quot;https://creativecommons.github.io/community/&quot;&gt;Slack community&lt;/a&gt;.&lt;/p&gt;
    &lt;/div&gt;
    &lt;div class=&quot;col pt-3&quot;&gt;
      &lt;img src=&quot;dhruv.jpg&quot; alt=&quot;dhruv bhanushali&quot; /&gt;&lt;br /&gt;
      &lt;small class=&quot;muted&quot;&gt;Dhruv Bhanushali, credit: Arpit Gupta, CC BY&lt;/small&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;row&quot;&gt;
    &lt;div class=&quot;col&quot;&gt;
      &lt;p&gt;&lt;strong&gt;María Belén Guaranda Cabezas&lt;/strong&gt;&lt;/p&gt;

      &lt;p&gt;&lt;em&gt;Hello! My name is María, and I am an undergraduate Computer 
      Science student from ESPOL, in Ecuador. I have worked for the past 2 
      years as a research assistant. I have worked in projects including 
      computer vision, the estimation of socio-economic indexes through CDRs 
      analysis, and a machine learning model with sensors data. During my 
      spare time, I like to watch animes and reading. I love sports! Specially
       soccer. I am also committed to environmental causes, and I am a huge 
      fan of cats and dogs (I have 4 and 1 respectively).&lt;/em&gt;&lt;/p&gt;

      &lt;p&gt;María will be working on producing visualizations of the data 
      associated with more than 300 million works we have indexed in the CC 
      Catalog (which powers CC Search) and how that data is interconnected. 
      These visualizations will enable users to understand how much 
      CC-licensed content is available on the internet, which websites host 
      the most content, which CC licenses are used the most, and much more. 
      She will be mentored by our Data Engineer &lt;a href=&quot;https://creativecommons.org/author/sclachar/&quot;&gt;Sophine Clachar&lt;/a&gt; with backup from Breno Ferreira.&lt;/p&gt;

      &lt;p&gt;You can follow the progress of this project through the &lt;a href=&quot;https://github.com/creativecommons/cccatalog-dataviz&quot;&gt;GitHub repo&lt;/a&gt; or on the &lt;code&gt;#gsoc-cc-catalog-viz&lt;/code&gt; channel on our &lt;a href=&quot;https://creativecommons.github.io/community/&quot;&gt;Slack community&lt;/a&gt;.&lt;/p&gt;
    &lt;/div&gt;
    &lt;div class=&quot;col pt-3&quot;&gt;
      &lt;img src=&quot;maria.jpg&quot; alt=&quot;María Belén Guaranda Cabezas&quot; /&gt;&lt;br /&gt;
      &lt;small class=&quot;muted&quot;&gt;María Belén Guaranda Cabezas, CC BY-NC-SA&lt;/small&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;row&quot;&gt;
    &lt;div class=&quot;col&quot;&gt;
      &lt;p&gt;&lt;strong&gt;Ari Madian&lt;/strong&gt;&lt;/p&gt;

      &lt;p&gt;&lt;em&gt;I am an 18 year old, Seattle based, mostly self taught, Computer 
      Science student. I originally started programming by tinkering with 
      Python, and eventually moved into C# and the .NET framework, as well as 
      JS and some web development. I like Chai and Rooibos teas, volunteering 
      at my local food bank, and some occasional PC gaming, among other 
      things. I’m now working with Creative Commons on Google Summer of Code!&lt;/em&gt;&lt;/p&gt;

      &lt;p&gt;Ari will be working on creating a modern human-centered version of &lt;a href=&quot;https://creativecommons.org/choose/&quot;&gt;our CC license chooser tool&lt;/a&gt;, which is long overdue for an update. His work will focus on design and usability as well as code. CC’s Front End Engineer &lt;a href=&quot;https://creativecommons.org/author/brenoferreira/&quot;&gt;Breno Ferreira&lt;/a&gt; is the primary mentor for this project with support from Alden Page.&lt;/p&gt;

      &lt;p&gt;You can follow the progress of this project through the &lt;a href=&quot;https://github.com/creativecommons/cc-chooser&quot;&gt;GitHub repo&lt;/a&gt; or on the &lt;code&gt;#gsoc-license-chooser&lt;/code&gt; channel on our &lt;a href=&quot;https://creativecommons.github.io/community/&quot;&gt;Slack community&lt;/a&gt;.&lt;/p&gt;
    &lt;/div&gt;
    &lt;div class=&quot;col pt-3&quot;&gt;
      &lt;p&gt;&lt;img src=&quot;ari.jpg&quot; alt=&quot;Ari Madian&quot; /&gt;&lt;br /&gt;
      &lt;small class=&quot;muted&quot;&gt;Ari Madian, credit: Ellen Madian, CC0&lt;/small&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;row&quot;&gt;
    &lt;div class=&quot;col&quot;&gt;
      &lt;p&gt;&lt;strong&gt;Mayank Nader&lt;/strong&gt;&lt;/p&gt;

      &lt;p&gt;&lt;em&gt;I am Mayank Nader, a sophomore Computer Science student from 
      India. Currently, my main area of interest is Python scripting, 
      JavaScript development, backend, and API development. I also like to 
      experiment with bash scripting and ricing and configuring my Linux 
      setup. Apart from that, I like listening to music and watching movies, 
      documentaries, and tv shows. I am very much inspired by Open Source and 
      try to contribute whenever I can.&lt;/em&gt;&lt;/p&gt;

      &lt;p&gt;Mayank will be working on building a cross-platform browser plugin 
      that allows users to search CC-licensed works directly from the browser 
      and enable reuse of those works by providing easy image attribution 
      tools. Users will be able to find content to use without having to 
      switch to a new website. Mayank will be mentored by CC’s Software 
      Engineer &lt;a href=&quot;https://creativecommons.org/author/aldencreativecommons-org/&quot;&gt;Alden Page&lt;/a&gt; with support from Timid Robot Zehta.&lt;/p&gt;

      &lt;p&gt;You can follow the progress of this project through the GitHub repo or on the #gsoc-browser-ext channel on our &lt;a href=&quot;https://creativecommons.github.io/community/&quot;&gt;Slack community&lt;/a&gt;.&lt;/p&gt;

      &lt;p&gt;You can visit &lt;a href=&quot;https://summerofcode.withgoogle.com/organizations/6514859793973248/&quot;&gt;the Creative Commons organization page&lt;/a&gt;
       on Google Summer of Code site to see longer descriptions of the 
      projects. We welcome community input and feedback – you are the users of
       all these products and we’d love for you to be involved. So don’t 
      hesitate to join the project Slack channel or talk to us on GitHub or &lt;a href=&quot;https://creativecommons.github.io/community/&quot;&gt;our other community forums&lt;/a&gt;.&lt;/p&gt;
    &lt;/div&gt;
    &lt;div class=&quot;col pt-3&quot;&gt;
      &lt;p&gt;&lt;img src=&quot;mayank.png&quot; alt=&quot;Mayank Nader&quot; /&gt;&lt;br /&gt;
      &lt;small class=&quot;muted&quot;&gt;Mayank Nader, credit: Rohit Motwani, CC BY&lt;/small&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;&lt;em&gt;This post was originally posted &lt;a href=&quot;https://creativecommons.org/2019/05/30/meet-ccs-2019-google-summer-of-code-students/&quot;&gt;on the primary Creative Commons blog&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry xml:base="http://creativecommons.github.io/blog/entries/cc-gsoc-accepted-students/">
    <title type="text">CC Google Summer of Code accepted students announced</title>
    <id>urn:uuid:6570016b-b89a-3f5a-9e6f-09a9c9d88f01</id>
    <updated>2019-05-06T00:00:00Z</updated>
    <link href="http://creativecommons.github.io/blog/entries/cc-gsoc-accepted-students/" />
    <author>
      <name>kgodey</name>
    </author>
    <content type="html">&lt;p&gt;Google Summer of Code has just announced the list of accepted students for 2019. We’d like to congratulate our accepted students Ahmad Bilal, Ari Madian, Dhruv Bhanushali, Maria Belen Guaranda, and Mayank Nader! Your mentors will be in touch with you with next steps.&lt;/p&gt;
&lt;p&gt;We reshuffled some of the mentors for the projects around (from our original &lt;a href=&quot;https://creativecommons.github.io/gsoc-2019/project-ideas/&quot;&gt;Project Ideas list&lt;/a&gt;) so that we could have a dedicated mentor for each project. I will be focusing on the responsibility of organization admin and supporting the projects however I can. Here's the final list of accepted proposals and mentors:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CC WordPress Plugin&lt;/strong&gt; by Ahmed Bilal (mentor: Timid Robot Zehta, backup: Hugo Solar)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;New CC License Chooser&lt;/strong&gt; by Ari Madian (mentor: Breno Ferreira, backup: Alden Page)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CC Vocabulary&lt;/strong&gt; by dhruvkb (mentor: Hugo Solar, backup: Sophine Clachar)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CC Catalog Visualization&lt;/strong&gt; by Maria Belen Guaranda (mentor: Sophine Clachar, backup: Breno Ferreira)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CC Browser Extension&lt;/strong&gt; by Mayank Nader (mentor: Alden Page, backup: Timid Robot Zehta)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Read more &lt;a href=&quot;https://summerofcode.withgoogle.com/organizations/6514859793973248/#projects&quot;&gt;about the accepted proposals here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Please don’t lose heart if you were not accepted! We were amazed at the quality of proposals we got and we had to make some really tough decisions. We appreciate the hard work you put into your proposals and contributing to our code and we wish we could accept more proposals. We hope that you’ll stick around and &lt;a href=&quot;https://creativecommons.github.io/contributing-code/&quot;&gt;be part of the CC developer community&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you’re interested in working on one of our remaining &lt;a href=&quot;https://creativecommons.github.io/gsoc-2019/project-ideas/&quot;&gt;project ideas&lt;/a&gt; as a volunteer outside of Google Summer of Code, please reach out to me. These are all things that CC is invested in building and we can provide guidance. We are especially looking for help with &lt;a href=&quot;https://creativecommons.github.io/gsoc-2019/project-ideas/all/#supercharge-our-indexing-engine&quot;&gt;supercharging our search indexer&lt;/a&gt;, improving our tooling around license translations (including &lt;a href=&quot;https://creativecommons.github.io/gsoc-2019/project-ideas/all/#automated-link-checking&quot;&gt;automated license link checking&lt;/a&gt;), and &lt;a href=&quot;https://creativecommons.github.io/gsoc-2019/project-ideas/all/#cc-plugin-generic&quot;&gt;plugins for integrating CC Search with external creation platforms&lt;/a&gt;. If we have multiple volunteers for the same idea, we will ask them to work together.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;A note about availability&lt;/em&gt;: all CC staff have very limited availability over the next week because of&lt;a href=&quot;https://summit.creativecommons.org/&quot;&gt; CC Global Summit&lt;/a&gt; and CC is closed for most of the following week so we won’t be around at all then. Please be patient, we’ll respond to you as soon as we can.&lt;/p&gt;
</content>
  </entry>
  <entry xml:base="http://creativecommons.github.io/blog/entries/open-source-at-cc-gs2019-pre-event/">
    <title type="text">Open Source at Creative Commons - 2019 Global Summit Event</title>
    <id>urn:uuid:b6919fc1-840a-3084-93ff-b2debfde5926</id>
    <updated>2019-05-01T00:00:00Z</updated>
    <link href="http://creativecommons.github.io/blog/entries/open-source-at-cc-gs2019-pre-event/" />
    <author>
      <name>sclachar</name>
    </author>
    <content type="html">&lt;p&gt;Creative Commons has been building free software for over a decade to support its mission of maximizing digital creativity, sharing, and innovation. We would love your assistance in creating and improving that software. Please join us at &lt;a href=&quot;https://summit.creativecommons.org/&quot;&gt;Creative Commons Global Summit 2019&lt;/a&gt; in Lisbon, Portugal May 9-11 2019 where we will host a session entitled &lt;a href=&quot;https://ccglobalsummit2019lisbonportugal.sched.com/event/MiWW/open-source-at-creative-commons&quot;&gt;Open Source at Creative Commons&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Session goals&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Introduce the Creative Commons Engineering Team.&lt;/li&gt;
&lt;li&gt;Discuss our primary projects and potential collaborations.&lt;/li&gt;
&lt;li&gt;Network with the attendees to build a vibrant community of developers.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Event Information&lt;/strong&gt;
&lt;br&gt;Date: Friday May 10, 2019 1:30pm - 2:25pm
&lt;br&gt;Location: &lt;a href=&quot;http://www.museudooriente.pt/museuoriente/deli-ilhas.php&quot;&gt;New Delhi Room&lt;/a&gt;, 4th Floor, Museu do Oriente Av. Brasília 352, 1350-279 Lisboa, Portugal
&lt;br&gt;Moderator: &lt;a href=&quot;https://mzeinstra.nl/&quot;&gt;Maarten Zeinstra&lt;/a&gt; Chapter lead for Creative Commons Netherlands&lt;/p&gt;
&lt;p&gt;We look forward to meeting you at this event and getting your feedback. If you would like to stay updated on our work, join our &lt;a href=&quot;https://groups.google.com/a/creativecommons.org/forum/#!forum/cc-developers&quot;&gt;developer mailing list&lt;/a&gt;, the #creativecommons-dev IRC channel on &lt;a href=&quot;https://freenode.net/&quot;&gt;freenode&lt;/a&gt;, or the #cc-developers channel on our &lt;a href=&quot;https://slack-signup.creativecommons.org/&quot;&gt;Slack community&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry xml:base="http://creativecommons.github.io/blog/entries/cc-search-out-of-beta/">
    <title type="text">CC Search is out of beta with 300M images and easier attribution</title>
    <id>urn:uuid:08054206-9702-389e-b5c0-ce707ce5884d</id>
    <updated>2019-04-30T00:00:00Z</updated>
    <link href="http://creativecommons.github.io/blog/entries/cc-search-out-of-beta/" />
    <author>
      <name>janeatcc</name>
    </author>
    <content type="html">&lt;p&gt;Today &lt;a href=&quot;https://search.creativecommons.org/&quot;&gt;CC Search&lt;/a&gt; comes out of beta, with over 300 million images indexed from multiple collections, a major redesign, and faster, more relevant search. It’s the result of a huge amount of work from the engineering team at Creative Commons and our community of volunteer developers.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/blog/entries/cc-search-out-of-beta/compressed-kittens-again.gif&quot; alt=&quot;cc-search-gif&quot;&gt;&lt;/p&gt;
&lt;p&gt;CC Search searches images across &lt;a href=&quot;https://search.creativecommons.org/about&quot;&gt;19 collections&lt;/a&gt; pulled from open APIs and the &lt;a href=&quot;https://commoncrawl.org/&quot;&gt;Common Crawl&lt;/a&gt; dataset, including cultural works from museums (the Metropolitan Museum of Art, Cleveland Museum of Art), graphic designs and art works (Behance, DeviantArt), photos from Flickr, and an initial set of CC0 3D designs from Thingiverse.&lt;/p&gt;
&lt;p&gt;Aesthetically, you’ll see some key changes — a cleaner home page, better navigation and filters, design alignment with creativecommons.org, streamlined attribution options, and clear channels for providing feedback on both the overall function of the site and on specific image reuses. It’s also now linked directly from the Creative Commons homepage as the default method to search for CC-licensed works, and replaces the old search portal (though that tool is still online &lt;a href=&quot;https://oldsearch.creativecommons.org/&quot;&gt;here&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Under the hood, we improved search loading times and search phrase relevance, implemented analytics to better understand when and how the tools are used, and fixed many critical bugs our community helped us to identify.&lt;/p&gt;
&lt;h3 id=&quot;whats-next&quot;&gt;What’s next&lt;/h3&gt;&lt;p&gt;We will continue to grow the number of images in our catalog, prioritizing key image collections such as Europeana and Wikimedia Commons. We also plan to index additional types of CC-licensed works, such as open textbooks and audio, later this year. While our ultimate goal remains the same (to provide access to all 1.4 billion works in the commons), we are initially focused on &lt;a href=&quot;https://creativecommons.org/2019/03/19/cc-search/&quot;&gt;images that creators desire to reuse in meaningful ways&lt;/a&gt;, learning about how these images are reused in the wild, and incorporating that learning back into CC Search.&lt;/p&gt;
&lt;p&gt;Feature-wise, we have specific deliverables for this quarter listed in our &lt;a href=&quot;https://docs.google.com/document/d/19yH2V5K4nzWgEXaZhkzD1egzrRayyDdxlzxZOTCm_pc/&quot;&gt;roadmap&lt;/a&gt;, which includes advanced filters on the home page, the ability to browse collections without entering search terms, and improved accessibility and UX on mobile. In addition, we expect some work related to CC Search will be done by our Google Summer of Code students starting in May.&lt;/p&gt;
&lt;p&gt;We’re also presenting the “&lt;a href=&quot;https://sched.co/MhKv&quot;&gt;State of CC Search&lt;/a&gt;” at the &lt;a href=&quot;https://summit.creativecommons.org/&quot;&gt;CC Global Summit&lt;/a&gt; next month in Lisbon, Portugal, where we’ll host a global community discussion around desired features and collections for CC Search.&lt;/p&gt;
&lt;h3 id=&quot;get-involved&quot;&gt;Get involved&lt;/h3&gt;&lt;p&gt;Your feedback is valuable, and we invite you to &lt;a href=&quot;https://search.creativecommons.org/feedback&quot;&gt;let us know&lt;/a&gt; what you would like to see improved. You can also join the &lt;a href=&quot;https://creativecommons.slack.com/messages/CCS9CF2JE/details/&quot;&gt;#cc-usability&lt;/a&gt; channel on &lt;a href=&quot;https://wiki.creativecommons.org/wiki/Slack#How_to_join_Slack&quot;&gt;CC Slack&lt;/a&gt; to keep up with new releases.&lt;/p&gt;
&lt;p&gt;All of our code, including the code behind CC Search, is open source (&lt;a href=&quot;https://github.com/creativecommons/cccatalog-frontend/&quot;&gt;CC Search&lt;/a&gt;, &lt;a href=&quot;https://github.com/creativecommons/cccatalog-api&quot;&gt;CC Catalog API&lt;/a&gt;, &lt;a href=&quot;https://github.com/creativecommons/cccatalog&quot;&gt;CC Catalog&lt;/a&gt;) and we &lt;a href=&quot;https://creativecommons.github.io/contributing-code/&quot;&gt;welcome community contribution&lt;/a&gt;. If you know how to code, we invite you to &lt;a href=&quot;https://creativecommons.github.io/&quot;&gt;join the growing CC developer community&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;thank-you&quot;&gt;Thank you&lt;/h3&gt;&lt;p&gt;CC Search is also made possible by a number of institutional and individual supporters and donors. Specifically, we would like to thank &lt;a href=&quot;https://www.arcadiafund.org.uk/about-peter-baldwin-lisbet-rausing/&quot;&gt;Arcadia&lt;/a&gt; – a charitable fund of Lisbet Rausing and Peter Baldwin, &lt;a href=&quot;https://www.mozilla.org/en-US/foundation/&quot;&gt;Mozilla&lt;/a&gt;, and the Brin Wojcicki Foundation for their support.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;This post was originally posted &lt;a href=&quot;https://creativecommons.org/2019/04/30/cc-search-images/&quot;&gt;on the primary Creative Commons blog&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry xml:base="http://creativecommons.github.io/blog/entries/open-development-with-saltstack/">
    <title type="text">Open Development with SaltStack</title>
    <id>urn:uuid:6dc70283-9d5a-3a76-bc8e-95cabae41752</id>
    <updated>2019-04-17T00:00:00Z</updated>
    <link href="http://creativecommons.github.io/blog/entries/open-development-with-saltstack/" />
    <author>
      <name>TimidRobot</name>
    </author>
    <content type="html">&lt;p&gt;I am excited to publicize the open source repository for our SaltStack configuration: &lt;a href=&quot;https://github.com/creativecommons/sre-salt-prime&quot;&gt;creativecommons/sre-salt-prime&lt;/a&gt;. This is a rare offering. Not many configuration management system repositories are open sourced. Read on for why this is important to me :)&lt;/p&gt;
&lt;p&gt;I really like open source software (&lt;a href=&quot;https://opensource.org/osd-annotated&quot;&gt;The Open Source Definition (Annotated) | Open Source Initiative&lt;/a&gt;). Over the years it has provided me with access and capabilities I would not normally be able to afford.&lt;/p&gt;
&lt;p&gt;I had very little money in college. My first computer was salvaged from a dumpster and ran entirely on open source software. I was once reduced to begging a few dollars to satisfy a museum's arbitrarily enforced &quot;suggested donation&quot;. Thankfully, open source image manipulation software powered many of my art projects.&lt;/p&gt;
&lt;p&gt;With the exception of typing class in high school and a few training sessions at work, I have never received any formal computer training. Instead, I was able to teach myself by using and investigating open source software. I have been able to determine exactly why open source software behaves the way it does by looking at the source code. It is instructive to be able to synthesize complex systems as a single user and participate in the same communities as SysAdmins using the same software with thousands or millions of users.&lt;/p&gt;
&lt;p&gt;I've been gainfully employed in the technology sector for over a decade so the free cost of open source software is not as necessary to me. However, open source software remains very important. As a SysAdmin, I have repeatedly found open source communities to be a better resource for support than even the most expensive maintenance contract. The ability to make at-will modifications to a codebase can save project timelines, and seeing those modifications accepted upstream is deeply satisfying.&lt;/p&gt;
&lt;p&gt;When I started at Creative Commons in the fall of 2018, I began using &lt;a href=&quot;https://en.wikipedia.org/wiki/Salt_(software)&quot;&gt;SaltStack&lt;/a&gt; full time. As part of my work on developing infrastructure as code at Creative Commons, I created a new open source repository for our SaltStack configuration: &lt;a href=&quot;https://github.com/creativecommons/sre-salt-prime&quot;&gt;creativecommons/sre-salt-prime&lt;/a&gt;. While working on provisioning of AWS resources, I have had trouble finding examples. I learn best by example and I know I’m not alone. I hope opening this repository helps other Site Reliability Engineers (SREs) and Systems Administrators (SysAdmins).&lt;/p&gt;
&lt;p&gt;I expect that working in the open will improve the quality of my work. Research has not only shown that people produce higher quality work when they expect it to be reviewed or shared, but also that open source allows others to provide criticism, feedback, and contributions.&lt;/p&gt;
&lt;p&gt;Perhaps most of all, I hope to give back to the community. I hope it helps others learn when they do not have access to proprietary software at home, school, or work. I hope that my work in the open might lower the resources required to implement open source for others.&lt;/p&gt;
</content>
  </entry>
  <entry xml:base="http://creativecommons.github.io/blog/entries/cc-plus-gsoc-2019/">
    <title type="text">CC + Google Summer of Code 2019</title>
    <id>urn:uuid:e516bab4-2140-3384-9d82-d91e738b450c</id>
    <updated>2019-03-04T00:00:00Z</updated>
    <link href="http://creativecommons.github.io/blog/entries/cc-plus-gsoc-2019/" />
    <author>
      <name>kgodey</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img src=&quot;/blog/entries/cc-plus-gsoc-2019/cc-gsoc.png&quot; alt=&quot;CC + Google Summer of Code&quot;&gt;&lt;/p&gt;
&lt;p&gt;We are proud to announce that Creative Commons &lt;a href=&quot;https://summerofcode.withgoogle.com/organizations/6514859793973248/&quot;&gt;has been accepted as a mentor organization&lt;/a&gt; for the 2019 Google Summer of Code program.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://summerofcode.withgoogle.com/&quot;&gt;Google Summer of Code&lt;/a&gt; (GSoC) is a annual global program through which Google awards stipends to university students who write code for free and open-source software projects during their school break. CC has been a mentor organization for GSoC on seven previous occasions, but our last participation was in 2013, so we are glad to be reviving the tradition and hosting students again.&lt;/p&gt;
&lt;p&gt;We’ve compiled &lt;a href=&quot;https://creativecommons.github.io/gsoc-2019/project-ideas/all/&quot;&gt;a list of project ideas&lt;/a&gt; for students to choose from when submitting their work proposal. There’s a lot of variety to choose from – adding features to CC Search, reviving older CC products, creating entirely new tools that increase the reach of CC licenses, figuring out ways to better present our legal and technical work, and more. There is definitely room for creativity – the project ideas are defined in broad terms, and students may also choose to submit a proposal for an original idea.&lt;/p&gt;
&lt;p&gt;One of the goals of the CC engineering team this year is to build an active developer community around our projects. We’ve been writing free and open-source software for over a decade. Lately, we haven’t done the best job of enabling external developers to contribute to those projects. Hosting Google Summer of Code is our first step to change that for the better, and we’re also actively working on several other improvements to our code and processes, such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://creativecommons.github.io/&quot;&gt;Creative Commons Open Source&lt;/a&gt;, a hub for the CC developer community.&lt;/li&gt;
&lt;li&gt;Making CC Search’s development more transparent. Our &lt;a href=&quot;https://github.com/orgs/creativecommons/projects/7&quot;&gt;current sprint workload&lt;/a&gt; is already public and we’ll be releasing a roadmap soon.&lt;/li&gt;
&lt;li&gt;General cleanup, documentation, and contribution guidelines for our projects.&lt;/li&gt;
&lt;li&gt;A technical blog.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you want to stay updated on our work, join our &lt;a href=&quot;https://groups.google.com/a/creativecommons.org/forum/#!forum/cc-developers&quot;&gt;brand new developer mailing list&lt;/a&gt;, the #creativecommons-dev IRC channel on &lt;a href=&quot;https://freenode.net/&quot;&gt;freenode&lt;/a&gt;, or the #cc-developers and #cc-gsoc channels on our &lt;a href=&quot;https://slack-signup.creativecommons.org/&quot;&gt;Slack community&lt;/a&gt;. And if you’re a student (or know a student), please consider submitting a Google Summer of Code proposal! It’s a great way to get an introduction to open-source, build real-world skills, work on interesting technical challenges, and help advance CC’s mission.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;This post was originally posted &lt;a href=&quot;https://creativecommons.org/2019/03/04/cc-google-summer-of-code-2019/&quot;&gt;on the primary Creative Commons blog&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
</feed>
